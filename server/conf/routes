# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET     /team                       controllers.Application.team()
GET     /login                      controllers.Application.login()
POST    /login                      controllers.Application.authenticate()

# Project
GET		/projects/edit/:id			controllers.DataEntry.edit( id, mode: Integer ?= 0)

# TO DELETE
GET		/projects/:id.json			controllers.DataEntry.edit( id, mode: Integer ?= 1)

#API  

GET /test/laurier								controllers.DataEntry.test_laurier()
GET /test/guillaume								controllers.DataEntry.test_guillaume()

#####TODO JSON

# API pour systeme
POST	/api/systems/new/:project_id			controllers.DataEntry.createSystem(project_id)
POST	/api/systems/:id						controllers.DataEntry.updateSystem(id)
GET		/api/systems/:id						controllers.DataEntry.getSystem(id)
GET		/api/systems							controllers.DataEntry.getAllSystems()
POST	/api/systems/delete/:id					controllers.DataEntry.deleteSystem(id)

# API pour Process
POST	/api/process/new/:system_id				controllers.DataEntry.createProcess(system_id)
POST	/api/process/:id						controllers.DataEntry.updateProcess(id)
GET		/api/process/:id						controllers.DataEntry.getProcess(id)
GET		/api/process							controllers.DataEntry.getAllProcess()
POST	/api/process/delete/:id					controllers.DataEntry.deleteProcess(id)

# API pour data group
POST	/api/datagroups/new/:process_id			controllers.DataEntry.createDataGroup(process_id)
POST	/api/datagroups/:id						controllers.DataEntry.updateDataGroup(id)
GET		/api/datagroups/:id						controllers.DataEntry.getDataGroup(id)
GET		/api/datagroups							controllers.DataEntry.getAllDataGroups()
POST	/api/datagroups/delete/:id				controllers.DataEntry.deleteDataGroup(id)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
GET		/bootstrap/*file			controllers.Assets.versioned(path="/public/bootstrap", file: Asset)
